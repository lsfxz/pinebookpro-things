# Maintainer:  Christoph Mohr <christoph.mohr@gmail.com>
# Contributor:  Giovanni 'ItachiSan' Santini <giovannisantini93@yahoo.it>
# Contributor: Filipe La√≠ns (FFY00) <lains@archlinux.org>
# Contributor: Pieter Goetschalckx <3.14.e.ter <at> gmail <dot> com>

pkgname=ferdi-git
_pkgname=ferdi
pkgver=5.4.4_beta.1_r0_g2bbe3dfc
pkgrel=1
pkgdesc='A messaging browser that allows you to combine your favorite messaging services into one application.'
arch=(x86_64 i686 aarch64)
url='https://getferdi.com/'
license=(Apache)
depends=(electron)
conflicts=('ferdi')
provides=('ferdi')
makedepends=(expac git npm python2)
source=("git+https://github.com/getferdi/${_pkgname}.git"
        "git+https://github.com/getferdi/recipes.git"
        "git+https://github.com/getferdi/internal-server.git"
        'ferdi.desktop'
        'ferdi.sh')
sha512sums=('SKIP'
            'SKIP'
            'SKIP'
            'a30392eb86625214f09ff39fcf4aed09a9b41243e84b2f1a36508072fe6ffc84ff30ad52b105455ca4996ee79725e04d12c3f8e783d2f84b3eaee72686ccaf62'
            '6313c50e4226a144303c5a0055f08312009ea14e45de227c163aaeb528a49c796704bbd3b8cfa2cce49840e54dbd5e25cf8a241e619f2bf9b1a4ff79b80b78eb')

pkgver() {
  cd ferdi
  git checkout master -q
  ver=$(git describe --long --tags | sed 's/^v//;s/\([^-]*-g\)/r\1/;s/-/_/g')
  git checkout develop -q
  echo $ver
}

prepare() {
  # Prepare Python 2 for later
  mkdir python2_path
  ln -s `which python2` python2_path/python

  cd ferdi
  git submodule init
  git config submodule.recipes.url $srcdir/recipes
  git config submodule.src/internal-server.url $srcdir/internal-server

  git submodule update --init --recursive

  # Prevent ferdi from being launched in dev mode
  sed -i "s|export const isDevMode = .*|export const isDevMode = false;|g" \
    src/environment.js
  sed -i "s|import isDevMode from 'electron-is-dev'|export const isDevMode = false|g" \
    src/index.js

  # Adjust the electron version to use when building
  if [[ $CARCH == 'aarch64' ]]; then
    electron_version="`expac %v electron-aarch64-bin | cut -d'-' -f1`"
  else
    electron_version="`expac %v electron | cut -d'-' -f1`"
  fi

  sed -i "s|\(\s\+\"electron\":\).*,|\1 \"$electron_version\",|" package.json

  # Better configuration for npm cache and calling installed binaries
  export npm_config_cache="$srcdir"/npm_cache
  export PATH="$srcdir/$_pkgname/node_modules/.bin:$srcdir/python2_path:$PATH"

  # Adjust node-sass version to avoid build issues
  npm install "node-sass@4.13.0"

  # Prepare the packages for building
  npm install lerna
  lerna bootstrap
}

build() {
  cd ferdi

  # Better configuration for npm cache and calling installed binaries
  export npm_config_cache="$srcdir"/npm_cache
  export PATH="$srcdir/ferdi/node_modules/.bin:$srcdir/python2_path:$PATH"

  gulp build
  electron-builder --linux dir
}

package() {
  cd ferdi

  # Install the .asar files
  install -dm 755 "$pkgdir"/usr/lib/ferdi
  if [[ $CARCH == 'aarch64' ]]; then
    cp -r --no-preserve=ownership --preserve=mode out/linux-arm64-unpacked/resources "$pkgdir"/usr/lib/ferdi/
  else
    cp -r --no-preserve=ownership --preserve=mode out/linux-unpacked/resources "$pkgdir"/usr/lib/ferdi/
  fi

  install -dm755 "$pkgdir"/usr/lib/ferdi/resources/app.asar.unpacked/recipes/
  cp -dr --no-preserve=ownership "$srcdir"/recipes "$pkgdir"/usr/lib/ferdi/resources/app.asar.unpacked/
  chmod -R 755 "$pkgdir"/usr/lib/ferdi/resources/app.asar.unpacked/

  # Install icon
  install -Dm 644 "$srcdir"/ferdi.desktop "$pkgdir"/usr/share/applications/ferdi.desktop
  install -Dm 644 build-helpers/images/icon.png "$pkgdir"/usr/share/icons/ferdi.png

  # Install run script
  install -Dm 755 "$srcdir"/ferdi.sh "$pkgdir"/usr/bin/ferdi
}
